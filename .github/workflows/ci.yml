name: Build and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump version and update changelog
        run: |
          # Get commit messages since last tag
          COMMIT_MESSAGES=$(git log --pretty=format:"%s" $(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")..HEAD)

          # Determine version bump type based on commit messages
          if echo "$COMMIT_MESSAGES" | grep -qE "^major(\(.+\))?:"; then
            BUMP_TYPE="major"
          elif echo "$COMMIT_MESSAGES" | grep -qE "^feat(\(.+\))?:"; then
            BUMP_TYPE="minor"
          else
            BUMP_TYPE="patch"
          fi

          echo "Detected bump type: $BUMP_TYPE"

          # Bump version
          npm version $BUMP_TYPE --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")

          # Generate changelog entry with commit details
          DATE=$(date +"%Y-%m-%d")
          CHANGELOG_ENTRY="## [$NEW_VERSION] - $DATE\n\n"

          # Add commits to changelog
          while IFS= read -r commit; do
            if [ ! -z "$commit" ]; then
              CHANGELOG_ENTRY="${CHANGELOG_ENTRY}- $commit\n"
            fi
          done <<< "$COMMIT_MESSAGES"

          CHANGELOG_ENTRY="${CHANGELOG_ENTRY}\n"

          # Update CHANGELOG.md
          if [ -f "CHANGELOG.md" ]; then
            sed -i "3i\\$CHANGELOG_ENTRY" CHANGELOG.md
          else
            echo -e "# Changelog\n\n$CHANGELOG_ENTRY" > CHANGELOG.md
          fi

          # Commit and push
          git add package.json CHANGELOG.md
          git commit -m "chore: bump version to v$NEW_VERSION [skip ci]"
          git tag "v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"
